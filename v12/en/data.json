{
    "version": "0.1",
    "pageContent": 
	{
        "_comments": "object that contains data for page labels, buttons, etc.",
        "navItems": 
		{
            "_common": 
			{
                "buttonBackToGallery": 
				{
                    "name": "Back To Gallery",
					"method": "backToGallery()",
					"idName": "backToGallery"	
                },
                "buttonStartTutorial": 
				{
                    "name": "Start Tutorial",
					"method": "startTutorialFromDetailsScreen()",
					"idName": "startTutorial"
                },
				"buttonViewDetails": 
				{
                    "name": "View Details",
					"method": "viewDetails()",
					"idName": "stepsViewDetails"	
                }
            }
        }
    },
    "tutorial": 
	{
        "_common": 
		{
            "name": "Discovery Connector - Using the ServiceNow Input node",
            "shortDescription": "Learn how to use the ServiceNow Input node (requires v12.0.6.0 or higher)",
            "durationText": "This tutorial takes approximately",
            "durationTime": "10 minutes",
            "_resourceToOpenComment": "The ID of the first resource to open when the user imports the tutorial. Resource IDs are defined in the repo_metadata.json Tutorials listing on ot4i.",
            "resourceToOpen": "MainFlow",
            "helpLink": 
			{
                "text": "IBM Documentation",
           		"link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/acesw_home.html"
            }
        },
        "pageDetails": 
		{
            "topicsName": "Tutorial topics",
            "_topicListComment": "A short list of product concepts or tasks demonstrated by this tutorial",
            "topicList": 
			[
                {
                    "title": "ServiceNow Input node"
                }
            ],
            "outcomesName": "Learning outcomes",
            "_outcomesComment": "A description of what the user will have learned or accomplished by running this tutorial.",
            "outcomeList": 
			[
                {
                    "title": "Use IBM App Connect Enterprise to connect to ServiceNow to monitor for new or updated objects."
                }
            ],
            "summary": 
			{
                "overviewName": "OVERVIEW",
                "_overviewComment": "A short description of what happens in this tutorial, and an optional short explanation of the ACE concepts used in this tutorial if necessary for context. What background knowledge must the user have for this to make sense?",
                "sections": 
				[
					{
						"section": "ServiceNow is a cloud-based platform that supports service management for all departments in your business including IT, human resources, facilities, and field services. IBM App Connect Enterprise provides a ServiceNow Input node, which enables you to connect to ServiceNow and monitor for new or updated objects, such as assets, incidents, problems and tickets. This tutorial requires access to ServiceNow. The tutorial provides a partially completed message flow and detailed steps describing the development process step-by-step. A summary of what you will do is provided here:"				
					},
					{
                       "section":"1. Create a local integration server which has a vault for storing credentials"
					},					
					{
                       "section":"2. Launch the connector discovery process using a policy project which will be used to store a ServiceNow policy containing connection information for the use of both a ServiceNow Request node and a ServiceNow Input node."
					},
					{
                       "section":"3. Configure a ServiceNow Request node to execute the Create Asset action and save the results of the connector discovery process."
					},
					{
                       "section":"4. Configure a ServiceNow Input node to monitor for the New Asset action and save the results of the connector discovery process."
					},
					{
                       "section":"5. Deploy and test the two provided message flows (one which connects to ServiceNow and creates an asset, and one which connects to ServiceNow and is triggered when an asset is created), which use the same ServiceNow policy (containing connection information for your ServiceNow instance) and use your ServiceNow credentials when the local integration server connects."
					}
                ]
            },
			"helpLinks": 
			{
				"_helpLinksComment": "Helplinks that have a type:web attribute are rendered as web links. Otherwise, links are assumed to be to embedded Help topics in the Knowledge Center.",
				"title": "Find out more",
				"details": 
				[					
					{
						"title": "IBM Documentation link to ",
						"description": "Connecting to ServiceNow from IBM App Connect Enterprise",
						"link": "https://www.ibm.com/docs/en/app-connect/12.0?topic=applications-connecting-servicenow-from-app-connect-enterprise",
						"type": "web"
					}					
				]
			}
        },
        "pageSteps": 
		{
            "create": 
			{
                "overview": 
				{
                    "name": "Create",
                    "heading": "Import projects",
                    "_createComment": "A description of what will happen when the user clicks Import.",
                    "sections": 
					[
                        {
                            "section": "When you click Import, two projects will be imported into your workspace:"
                        },
						{
                            "section": "1. An application named <span class='application'>ExampleServiceNowInput</span>"
                        },
						{
                            "section": "2. A policy project named <span class='application'>ServiceNowPolicyProject</span>"
                        },
						{
                            "section": "<span class='application'>ExampleServiceNowInput</span> contains two message flows named <span class='application'>ExampleServiceNowInputFlow</span> and <span class='application'>ExampleServiceNowRequestFlow</span>. To save you time, most of these two message flows have been developed and are configured ready for use, but the ServiceNow Input node in <span class='application'>ExampleServiceNowInputFlow</span> and the ServiceNow Request node in <span class='application'>ExampleServiceNowRequestFlow</span> have not yet been configured. This tutorial will guide you through the configuration of these two nodes. The <span class='application'>ExampleServiceNowRequestFlow</span> flow is driven by an HTTP input containing any well-formed JSON data, and uses a FlowOrder node to first acknowledge the input by replying with a fixed message back to the requesting client. Second in the flow sequence, the ServiceNow Request communicates with ServiceNow to create a new asset. This node has its three output terminals (Failure, Out and NoData) wired to three separate Trace nodes to capture the results. When the asset is created, this will trigger the <span class='application'>ExampleServiceNowInputFlow</span> flow using a ServiceNow Input node. This node has its three output terminals (Failure, Out and Catch) wired to three separate Trace nodes to capture the results."
                        },						
                        {
			    			"section": "<span class='application'>ServiceNowPolicyProject</span> will be empty when first imported. Through the actions of the tutorial it will end up containing a single policy named <span class='application'>ServiceNow1</span> which will be used by the two message flows in application <span class='application'>ExampleServiceNowInput</span>."							
						}
                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        				{
						"title": "IBM Documentation link to ",
						"description": "Connecting to ServiceNow from IBM App Connect Enterprise",
						"link": "https://www.ibm.com/docs/en/app-connect/12.0?topic=applications-connecting-servicenow-from-app-connect-enterprise",
						"type": "web"
					},
                        {
                             "title": "IBM Documentation link to ",
                             "description": "ServiceNow Input node",
                             "link": "https://www.ibm.com/docs/en/app-connect/12.0?topic=nodes-servicenow-input-node",
                             "type": "web"
                        }
                    ]
                },
                "actions": 
				{
                    "title": "Create Actions",
                    "details": 
					[
                        {
                            "name": "Import",
                            "method": "importArtifacts()"
                        }
                    ]
                }
            },
            "prepare": 
			{
                "overview": 
				{
                    "name": "Prepare",
                    "heading": "This section describes how to complete the configuration of the two message flows using the Connector Discovery process",
                    "_prepareComment": "A description of what just happened when the user clicked Import, and what will happen when the user clicks Deploy.",
                    "sections": [
				    {
                       "section":"<b>Create an Integration Server with a credential vault</b>",
						  "steps":
                        {
                          "type": "ordered",
                          "details":
                          [
                            {
                                "details": "From the Integration Explorer view in the bottom left corner of the Toolkit, right-click the Integration Servers folder and select the option to <span class='uicontrol'>Create a local integration server</span>. We will leave most of the options with their default values. Type in a value (at least 8 characters long) for the Vault Key property. The instructions later in the tutorial will assume a value of <code>password123</code>. Untick the check box at the bottom of the dialog which is labelled <code>Start Integration Server</code>. Click Finish. The local Integration Server will be created using a project in your Toolkit's workspace as its work directory. We deliberately don't want to start up the server until later in the tutorial, because when the server process runs it will lock the vault from being used by other processes. Before running the server we want to use the Toolkit Connector Discovery process to populate the vault with the credentials needed for communication with ServiceNow."
                            }
						  ]
						}
					},
					{
                       "section":"<b>Run the Connector Discovery process for the ServiceNow Request node</b>",
						  "steps":
                        {
                          "type": "ordered",
                          "details":
                          [
                             {
                                 "details": "When you imported the tutorial projects in the previous section, <span class='application'>ExampleServiceNowRequestFlow</span> in application <span class='application'>ExampleServiceNowInput</span> will have been opened for you. First, check the properties of the three trace nodes in the messge flow, which are configured ready for deployment on a Windows system (their <code>File path</code> property is set to use the directory <code>C:\\temp</code>). If you are running on a different operating system, or if the file directory is not convenient for you, then feel free to change it. Next, select the ServiceNow Request node and view its Properties window at the base of the screen. At this stage you should see an error stating that an action must be specified. Every ServiceNow Request node (in fact, every Discovery Connector node) requires configuration to define what action it should execute against what object in the endpoint system. You make these decisions using the Connector Discovery process. Click the Launch Connector Discovery button."
							 },							 
							{
								"details": "The Launch Connector Discovery wizard will open. The process of connecting to ServiceNow and discovering information from it, will cause your ServiceNowe credentials to be saved in the vault, and your ServiceNow connection information to be saved in a policy. Fill out the three required property values shown below and then click the Launch Discovery button:",
        							"substeps": {
          								"type":"unordered",
          								"details": [
            								{
              									"details": "<strong>Policy Project:</strong> From the dropdown select the policy project named <code>ServiceNowPolicyProject</code>"
            								},
            								{
              									"details": "<strong>Work directory:</strong> Click the Browse button and navigate to the TEST_SERVER directory in your Toolkit workspace. For example, this would be C:\\workspace\\TEST_SERVER if your Toolkit workspace were at C:\\workspace."
            								},
            								{
              									"details": "<strong>Vault Key:</strong> Type the same vault key which you used when creating your local integration server (named TEST_SERVER) earlier in the tutorial, for example <code>password123</code>"
            								}
          								]
									}
	  						}, 
                            {
                                 "details": "A new Configure connector node window will open. If you had previously connected to a ServiceNow system then a list of those connections would be displayed, but in this example the status of the ServiceNow connector is shown as <code>Not connected</code>. Underneath this you will see a list of ServiceNow objects (such as Asset, Attachment, Comments, Department, Incident, Knowledge, Problem, System user, and Ticket) which can be expanded to see the actions which can be executed against these objects. In this tutorial, we will expand the <code>Asset</code> section and choose to <code>Create asset</code>. The list of objects and actions will be replaced with a Connect button. Click the Connect button."
							},
							{
                                 "details": "The page will refresh and display Connect to Salesforce, and offer a drop-down choice of <strong>Authorization method</strong> which can be either <code>Provide a username, password, and client credentials (OAUTH 2.0 PASSWORD)</code> or <code>Provide credentials for App Connect to use (BASIC OAUTH)</code>. Select the first of these options, click continue, and fill out the fields specifying your <strong>Endpoint URL</strong>, <strong>Username</strong>, <strong>Password</strong>, <strong>Client ID</strong> and <strong>Client secret</strong>. Click Connect."							
							},
							{
                                 "details": "Connecting to ServiceNow may take a few seconds. For this particular choice of action to Create asset, there are no further properties required by the discovery process.</code>."
							},
							{
                                 "details": "At the top of the window click the Save button, and you should see a confirmation message briefly appear. Close the Configure connector window and return to the Toolkit. <strong>It is important to remember this last step</strong> otherwise the vault will remain locked and you will be unable to start your integration server TEST_SERVER when you come to test the flow in the last section of the tutorial. You will now find that the properties of the ServiceNow Request node in the message flow have been updated. Save the message flow.  Explore the properties of the ServiceNow Request node. The Basic properties tab will now display a short description of <code>Create asset</code>, along with the <strong>Action</strong> (<code>CREATE</code>) and the <strong>object</strong> (<code>alm_asset</code>). On the Connection properties tab, the <strong>Policy</strong> will have been configured as <code>{SalesforcePolicyProject}:Salesforce1</code>."
							}
						  ]
						}
					},					
					{
                       "section":"<b>Run the Connector Discovery process for the Salesforce Input node</b>",
						  "steps":
                        {
                          "type": "ordered",
                          "details":
                          [
                             {
                                 "details": "If it is not open already, open <span class='application'>ExampleServiceNowInputFlow</span> which you will find in application <span class='application'>ExampleServiceNowInput</span>. First, check the properties of the three trace nodes in the messge flow, which are configured ready for deployment on a Windows system (their <code>File path</code> property is set to use the directory <code>C:\\temp</code>). If you are running on a different operating system, or if the file directory is not convenient for you, then feel free to change it. Next, select the ServiceNow Input node and view its Properties window at the base of the screen. At this stage you should see an error stating that an action must be specified. Every Salesforce Input node (in fact, every Discovery Connector node) requires configuration to define what action and objects it should monitor in the endpoint system. You make these decisions using the Connector Discovery process. Click the Launch Connector Discovery button."
							 },							 
							{
								"details": "The Launch Connector Discovery wizard will open. The process of connecting to ServiceNow and discovering information from it, will cause your ServiceNow credentials to be saved in the vault, and your ServiceNow connection information to be saved in a policy. Fill out the three required property values shown below and then click the Launch Discovery button:",
        							"substeps": {
          								"type":"unordered",
          								"details": [
            								{
              									"details": "<strong>Policy Project:</strong> From the dropdown select the policy project named <code>ServiceNowPolicyProject</code>"
            								},
            								{
              									"details": "<strong>Work directory:</strong> Click the Browse button and navigate to the TEST_SERVER directory in your Toolkit workspace. For example, this would be C:\\workspace\\TEST_SERVER if your Toolkit workspace were at C:\\workspace."
            								},
            								{
              									"details": "<strong>Vault Key:</strong> Type the same vault key which you used when creating your local integration server (named TEST_SERVER) earlier in the tutorial, for example <code>password123</code>"
            								}
          								]
									}
	  						}, 
                            {
                                 "details": "A new Configure connector node window will open. You already connected to your ServiceNow system in the previous section, so you should be able to select this account which will be named <code>{ServiceNowPolicyProject}:ServiceNow1</code>. Underneath this you will see a list of ServiceNow objects (such as Asset, Attachment, Comments, Department, Incident, Problem, System user, and Ticket) which can be expanded to see the actions which can be monitored and used to trigger your message flow. In this tutorial, we will expand the <code>Asset</code> section and choose <code>New asset</code>. The list of objects and actions will be replaced with a Connect button. Click the Connect button."
							},
							{
                                 "details": "Connecting to ServiceNow may take a few seconds. For this particular choice of event of New asset, there are no further properties required by the discovery process.</code>."
							},
							{
                                 "details": "At the top of the window click the Save button, and you should see a confirmation message briefly appear. Close the Configure connector window and return to the Toolkit. <strong>It is important to remember this last step</strong> otherwise the vault will remain locked and you will be unable to start your integration server TEST_SERVER when you come to test the flow in the last section of the tutorial. You will now find that the properties of the ServiceNow Input node in the message flow have been updated. Save the message flow.  Explore the properties of the ServiceNow Input node. The Basic properties tab will now display a short description of <code>New asset</code>, along with the <strong>Action</strong> (<code>CREATED</code>) and the <strong>object</strong> (<code>alm_asset</code>). On the Connection properties tab, the <strong>Policy</strong> will have been configured as <code>{ServiceNowPolicyProject}:ServiceNow1</code>."
							},
							{
								"details": "In addition to configuring the properties of the ServiceNow Request node, the discovery process will also have caused JSON schema files to have been generated in the project ExampleServiceNowInput. These JSON schemas represent the format of JSON messages which are expected to enter and leave the ServiceNow Request node. Next we will configure the node Mapping1 using one of these schemas. Double click the node Mapping1, and stick  with the defaults shown on the first page of the wizard which is launched and click Next. On the next page, in the Select map outputs pane, expand ExampleServiceNowInput and beneath it expand JSON Types and from the options select <code>ExampleServiceNowRequestFlow.ServiceNow_Request.request.schema_JsonType - gen\ExampleServiceNowInputFlow.ServiceNow_Input.response.schema.json</code> and click Finish. For a new asset creation, the asset properties are all option, but if you expand the message model, locate the elemtn named <code>comments</code>, right-click it and Assign the value <code>This is an example asset</code>."
							}												
						  ]
						}
					}					
					
             ]
                },
                "helpLinks": 
				{
                }
            },
            "run": 
			{
                "overview": 
				{
                    "name": "Run",
                    "heading": "",
                    "_runComment": "The full steps for the user to run through the tutorial. Use 'sections' to render paragraphs, 'steps' with a type of 'ordered' or 'unordered' to render HTML lists, and 'substeps' to render nested lists.",
                "sections":[                            
					           {  
								"section": "<b>Use the Flow Exerciser to test the tutorial scenario</b>",
                                "steps": {
                                    "type": "ordered",
                                    "details": [                                      
                                        {
                                        "details": "In the Integration Explorer view of the Toolkit, right-click TEST_SERVER and select the option to Start."
                                        },
                                        {
                                        "details": "Once the server has started, drag and drop deploy the policy project <span class='application'>ServiceNowPolicyProject</span> in to TEST_SERVER."
                                        },										
										{
                                        "details": "Return to <span class='resource'>ExampleServiceNowInputFlow.msgflow</span> and click the Flow Exerciser icon <img src='http://ot4i.github.io/ot4i.tutorials//dist/images/icons/iib/startFlowExerciser.png' alt='' /> to put the flow into recording mode. Leave this flow recording and then switch to <span class='resource'>ExampleServiceNowRequestFlow.msgflow</span> and click the Flow Exerciser icon <img src='http://ot4i.github.io/ot4i.tutorials//dist/images/icons/iib/startFlowExerciser.png' alt='' /> to put that flow into recording mode as well. We want both flows to be recording because we will use <span class='resource'>ExampleServiceNowRequestFlow.msgflow</span> to create a contact in ServiceNow which will in turn drive <span class='resource'>ExampleServiceNowInputFlow.msgflow</span>."
                                        },
										{
                                            "details": "In <span class='resource'>ExampleServiceNowRequestFlow.msgflow</span> Click the Send Message icon <img src='http://ot4i.github.io/ot4i.tutorials/dist/images/icons/iib/sendMessage.png' alt='' />. Create a new test message to invoke the HTTP Input node. Any well-formed JSON will be fine, even something as simple as <code>{&quot;hello&quot;:&quot;world&quot;}</code>. Click Send and your message is sent to the HTTPInput node. You will receive a JSON reply message which looks like this:<br><code>{\"message\":\"Request received, about to connect to ServiceNow\"}</code><br>  You may also see a highlighted path through the flow. Sometimes there may be a short pause before the data is returned from ServiceNow, so you may need to click the View Path icon <img src='http://ot4i.github.io/iib-tutorials/images/icons/iib/viewPath.png' alt='View path' /> in the Flow Exerciser toolbar in order to see the highlighted path carry on past the ServiceNow Request node and into a Trace node at the end of the message flow. If the message left the ServiceNow Request node down the out terminal then the Create asset in Salesforce will have been successful. If not, inspect the exception list to see what went wrong. Assuming success, switch to <span class='resource'>ExampleServiceNowInputFlow.msgflow</span> and click the View Path icon <img src='http://ot4i.github.io/iib-tutorials/images/icons/iib/viewPath.png' alt='View path' /> in the Flow Exerciser toolbar in order to see the highlighted path. You should see a message has been propagated out of the out terminal of the ServiceNow Input node. Click on the highlighted path and the message should contain the same comments information <code>This is an example asset</code> which was sent to ServiceNow by the first message flow."
										}
                                        ]
                                    }
                            }
                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
{
                             "title": "IBM Documentation link to ",
                             "description": "ServiceNow Input node",
                             "link": "https://www.ibm.com/docs/en/app-connect/12.0?topic=nodes-servicenow-input-node",
                             "type": "web"
                        },
						{
                            "title": "IBM Documentation link to ",
                            "description": "Testing your message flow by using the Flow exerciser",
                            "link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/rt26110_.htm",
							"type": "web"
                        }
						
                    ]
                }
            }
        }
    }
}
